setwd("C:/Users/Valerie Chan/Desktop/School/springquarter18/INFO201/Info-201-Final-Project/scripts")
subtract_average <- read.csv("../data/subtraction_average_2015_2016_v2.csv")
add_average <- read.csv("../data/additions_average_2015_2016.csv")
shiny::runApp('C:/Users/Valerie Chan/Desktop/School/springquarter18/INFO201/test')
runApp('C:/Users/Valerie Chan/Desktop/School/springquarter18/INFO201/test')
<<<<<<< HEAD
#Load libraries
library("plotly")
library("dplyr")
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State")
# margin = list(l = 100)
)
data <- read.csv("../data/spm_2016.csv")
factor(data$Official.Percent.Estimate)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State")
# margin = list(l = 100)
)
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 4
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State"),
margin = m
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State"),
margin = m
)
m <- list(
l = 100,
r = 50,
b = 100,
t = 100,
pad = 4
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State"),
margin = m
)
m <- list(
l = 125,
r = 50,
b = 100,
t = 100,
pad = 4
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list(title = "State"),
margin = m
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
r',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
factor(data$Official.Percent.Estimate)
data$Official.Number.Estimate <- factor(data$Official.Percent.Estimate)
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
View(data)
factor(data$Official.Percent.Estimate)
data$Official.Number.Estimate <- factor(data$Official.Percent.Estimate)
data$Official.Number.Estimate
plot_ly(data, x = factor(data$Official.Percent.Estimate),  y = factor(data$State),
name = "Office % Estimate", type = 'scatter',
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
plot_ly(data, x = seq(0, 25),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
plot_ly(data, x = seq(0, 25),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "red")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
plot_ly(x = seq(0, 25, by = 5),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "red")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
seq(0, 25),by = 5)
seq(0, 25, by = 5)
plot_ly(x = seq(0, 25, by = 5),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "red"))
plot_ly(x = seq(0, 25, by = 5),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "red")) %>%
layout(
autosize = F,
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
plot_ly(x = seq(0, 25, by = 5),  y = factor(data$State)) %>%
add_trace(x = factor(data$SPM.Percent.Estimate), y = factor(data$State),
name = "SPM % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "blue")) %>%
add_trace(x = factor(data$Official.Percent.Estimate), y = factor(data$State),
name = "Official % Estimate",type = 'scatter',
mode = "markers", marker = list(color = "red")) %>%
layout(
title = "Poverty level measurements 2016",
xaxis = list( title = "% of Poverty",
showticklabels = TRUE,
tickangle = 45),
margin = m
)
=======
shiny::runApp()
library(dplyr)
library(stringr)
#Convert csv to a usable dataframe
spm_2016 <- read.csv("../data/spm_2016.csv", stringsAsFactors = F)
spm_2016 <- data.frame(spm_2016)
state <- as.vector(unlist(spm_2016[1]))
new_spm_2016 <- spm_2016 %>%
mutate(state) %>%
select(State = state, everything(), -State)
percent_estimate <- new_spm_2016 %>%
select(State, Official.Percent.Estimate, SPM.Percent.Estimate) %>%
mutate(Percent.Estimate.Diff = SPM.Percent.Estimate - Official.Percent.Estimate)
#Working with the Official Measurement (Official) percentages:
#Find which states have poverty level higher than the national average
#via the Official Measurement. Calculate the proportion of those states
#over all states.
Official_national_average <- percent_estimate[percent_estimate$State ==
"United States", 2]
Official_above_nation_average <- percent_estimate %>%
filter(Official.Percent.Estimate > Official_national_average) %>%
select(State, Official.Percent.Estimate) %>%
arrange(desc(Official.Percent.Estimate))
Official_percent_states_above_average <-
round((nrow(Official_above_nation_average) / nrow(percent_estimate) * 100),
digits = 1)
#Working with the Supplemental Measurement (SPM) percentages:
#Find which states have poverty level higher than the national average
#via the Official Measurement. Calculate the proportion of those states
#over all states.
SPM_national_average <- percent_estimate[percent_estimate$State ==
"United States", 3]
SPM_above_nation_average <- percent_estimate %>%
filter(SPM.Percent.Estimate > SPM_national_average) %>%
select(State, SPM.Percent.Estimate) %>%
arrange(desc(SPM.Percent.Estimate))
SPM_percent_states_above_average <-
round((nrow(SPM_above_nation_average) / nrow(percent_estimate) * 100),
digits = 1)
#Official: Top 5 states in poverty
Official_top_five <- Official_above_nation_average[1:5, ]
colnames(Official_top_five)[2] <- "Percent Estimate"
#SPM: Top 5 states in poverty
SPM_top_five <- SPM_above_nation_average[1:5, ]
colnames(SPM_top_five)[2] <- "Percent Estimate"
#Test out the histogram for the SPM_top_five table
ggplot(data = SPM_top_five, aes(x = State, y = SPM_top_five[2])) +
geom_bar(stat = "identity", fill = "pink") +
xlab("States") +
ylab("Percent Estimate") +
ggtitle("Top 5 states with highest poverty level")
plot_ly(data, x = ~State, y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
data <- SPM_top_five
plot_ly(data, x = ~State, y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
runApp()
runApp()
runApp()
rm(list = ls())
source("spm_datasets.R", local = TRUE)
View(data)
View(data)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
View(data)
data
runApp()
runApp()
runApp()
plot_ly(SPM_top_five, x = ~State, y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
runApp()
runApp()
plot_ly(data = SPM_top_five, x = ~State,
y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "States with top 5 highest poverty level",
xaxis = list(title = "States"),
yaxis = list(title = "Percent Estimate"))
runApp()
runApp()
?source
runApp()
library(dplyr)
library(stringr)
library(plotly)
#Convert csv to a usable dataframe
spm_2016 <- read.csv("../data/spm_2016.csv", stringsAsFactors = F)
spm_2016 <- data.frame(spm_2016)
state <- as.vector(unlist(spm_2016[1]))
new_spm_2016 <- spm_2016 %>%
mutate(state) %>%
select(State = state, everything(), -State)
percent_estimate <- new_spm_2016 %>%
select(State, Official.Percent.Estimate, SPM.Percent.Estimate) %>%
mutate(Percent.Estimate.Diff = SPM.Percent.Estimate - Official.Percent.Estimate)
#Working with the Official Measurement (Official) percentages:
#Find which states have poverty level higher than the national average
#via the Official Measurement. Calculate the proportion of those states
#over all states.
Official_national_average <- percent_estimate[percent_estimate$State ==
"United States", 2]
Official_above_nation_average <- percent_estimate %>%
filter(Official.Percent.Estimate > Official_national_average) %>%
select(State, Official.Percent.Estimate) %>%
arrange(desc(Official.Percent.Estimate))
Official_percent_states_above_average <-
round((nrow(Official_above_nation_average) / nrow(percent_estimate) * 100),
digits = 1)
#Working with the Supplemental Measurement (SPM) percentages:
#Find which states have poverty level higher than the national average
#via the Official Measurement. Calculate the proportion of those states
#over all states.
SPM_national_average <- percent_estimate[percent_estimate$State ==
"United States", 3]
SPM_above_nation_average <- percent_estimate %>%
filter(SPM.Percent.Estimate > SPM_national_average) %>%
select(State, SPM.Percent.Estimate) %>%
arrange(desc(SPM.Percent.Estimate))
SPM_percent_states_above_average <-
round((nrow(SPM_above_nation_average) / nrow(percent_estimate) * 100),
digits = 1)
#Official: Top 5 states in poverty
Official_top_five <- Official_above_nation_average[1:5, ]
colnames(Official_top_five)[2] <- "Percent Estimate"
#SPM: Top 5 states in poverty
SPM_top_five <- SPM_above_nation_average[1:5, ]
colnames(SPM_top_five)[2] <- "Percent Estimate"
#Test out the histogram for the SPM_top_five table
# plot_ly(SPM_top_five, x = ~State, y = ~`Percent Estimate`,
#              type = 'bar', text = text,
#              marker = list(color = 'rgb(158,202,225)',
#                            line = list(color = 'rgb(8,48,107)',
#                                        width = 1.5))) %>%
#   layout(title = "January 2013 Sales Report",
#          xaxis = list(title = ""),
#          yaxis = list(title = ""))
SPM_top_five
Official_top_five
runApp()
plot_ly(data = data2(), x = ~State,
y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "States with top 5 highest poverty level",
xaxis = list(title = "States"),
yaxis = list(title = "Percent Estimate"))
plot_ly(data = SPM_top_five, x = ~State,
y = ~`Percent Estimate`,
type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(title = "States with top 5 highest poverty level",
xaxis = list(title = "States"),
yaxis = list(title = "Percent Estimate"))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data = SPM_top_five,
aes(x = state, y = `Percent Estimate` )) +
geom_bar(stat = "identity", fill = "pink") +
xlab("States") +
ylab("Percent Estimate")
SPM_top_five
ggplot(data = SPM_top_five,
aes(x = State, y = `Percent Estimate` )) +
geom_bar(stat = "identity", fill = "pink") +
xlab("States") +
ylab("Percent Estimate")
runApp()
runApp()
runApp()
title <- "Supplemental"
ggplot(data = SPM_top_five,
aes(x = State, y = `Percent Estimate` )) +
geom_bar(stat = "identity", fill = "pink") +
xlab("States") +
ylab("Percent Estimate")+
ggtitle(paste0("blabla", title))
runApp()
title <- "Supplemental"
ggplot(data = SPM_top_five,
aes(x = State, y = `Percent Estimate` )) +
geom_bar(stat = "identity", fill = "pink") +
xlab("States") +
ylab("Percent Estimate")+
ggtitle(paste0("blabla", title)) +
geom_text(aes(label=`Percent Estimate`))
runApp()
runApp()
runApp('C:/Users/hien1/Google Drive/INFO')
runApp('C:/Users/hien1/Google Drive/INFO')
runApp('C:/Users/hien1/Google Drive/INFO - Copy/Info-201-Final-Project/scripts')
shiny::runApp()
>>>>>>> 849c291e2ac24072a4e0f7c2871b4267d3ef107a
